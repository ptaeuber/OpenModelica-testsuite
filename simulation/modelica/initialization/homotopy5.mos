// name: homotopy5
// keywords: initialization, homotopy
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.homotopy5* _initializationTests.homotopy5* output.log
//
//  case for homotopy
//

loadString("
within ;
package initializationTests
  model homotopy5
    Real x (start=-0.5);
    // Real y (start=-0.5);
    parameter Real pi = 3.1415;
  equation
    0 = homotopy(2*x - 4 + sin(2*pi*x), x+0.5);
    // 0 = homotopy(2*y - 4 + sin(2*pi*y), 2*y - 4 + sin(2*pi*y) - (2*(-0.5) - 4 + sin(2*pi*(-0.5))));
  end homotopy5;
end initializationTests;
"); getErrorString();

// setCommandLineOptions("--initOptModules+=inlineHomotopy --homotopyApproach=global --initOptModules+=generateHomotopyComponents --noTearingForComponent=4"); getErrorString();
// setCommandLineOptions("--homotopyApproach=global --initOptModules+=generateHomotopyComponents --noTearingForComponent=4"); getErrorString();
// setCommandLineOptions("--homotopyApproach=global --noTearingForComponent=4"); getErrorString();
// setCommandLineOptions("--initOptModules+=inlineHomotopy --homotopyApproach=global --initOptModules+=generateHomotopyComponents"); getErrorString();
simulate(initializationTests.homotopy5, startTime=0.0, stopTime=0.0, simflags="-homotopyOnFirstTry"); getErrorString();
// simulate(initializationTests.homotopy5, startTime=0.0, stopTime=0.0); getErrorString();
res := OpenModelica.Scripting.readSimulationResult("initializationTests.homotopy5_res.mat", {time, x}, 2); getErrorString();

print("x=");
val(x, 0.0);

// Result:
// endResult
